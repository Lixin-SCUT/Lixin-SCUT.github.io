<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://nixil-ee.github.io/</id>
    <title>Gridea</title>
    <updated>2019-09-02T07:29:54.264Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://nixil-ee.github.io/"/>
    <link rel="self" href="https://nixil-ee.github.io//atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://nixil-ee.github.io//images/avatar.png</logo>
    <icon>https://nixil-ee.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[LeetCode刷题感想09.02]]></title>
        <id>https://nixil-ee.github.io//post/leetcode-shua-ti-gan-xiang-0902</id>
        <link href="https://nixil-ee.github.io//post/leetcode-shua-ti-gan-xiang-0902">
        </link>
        <updated>2019-09-02T02:49:37.000Z</updated>
        <content type="html"><![CDATA[<p>今天第一次开始刷leetcode，遵循前辈们的意见从容易开始刷，第一次选择了一个链表题，题目如下</p>
<p>请编写一个函数，使其可以删除某个链表中给定的（非末尾）节点，你将只被给定要求被删除的节点。<br>
现有一个链表 -- head = [4,5,1,9]，它可以表示为:<br>
输入: head = [4,5,1,9], node = 5<br>
输出: [4,1,9]<br>
解释: 给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -&gt; 1 -&gt; 9.</p>
<p>非常基础的一个链表结点删除，但是看到代码后我却无从下手了</p>
<pre><code>/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void deleteNode(ListNode* node) {
        }
};
</code></pre>
<p>what？只给了一个形参？不是应该给出链表的吗？<br>
但是还是立即开始思考如何遍历链表，这个过程中就暴露自己对遍历记得不牢固了，一直纠结判断条件到底是先判断结点值是否相等还是当前节点是否已经到达尾结点，翻查书籍后发现也不对啊，书中描述至少应该给出链表和删除标记（删除位置或删除值）<br>
心灰意冷下打开评论才发现是自己读题错误了，题目给出的条件是删除【给定的】节点！<br>
然后瞬间就想出答案了</p>
<pre><code>class Solution {
public:
    void deleteNode(ListNode* node) {
        node-&gt;val = node-&gt;next-&gt;val;
        node-&gt;next =  node-&gt;next-&gt;next;
        }
};
</code></pre>
<p>同时发现一个小问题，一开始在调用val数据成员时想按老习惯进行解引用(*)和调用符（.），由于解引用符的优先级低于调用符，所以是必需在解引用指针时加上括号的，于是就出现了下面的情况：</p>
<pre><code>class Solution {
public:
    void deleteNode(ListNode* node) {
        (*node).val = (*((*node).next)).val;
        (*node).next = (*((*node).next)).next;
        }
};
</code></pre>
<p>代码是自己写的自己还能懂，但是如果和同事交接时，这可读性可以说是惨不忍睹了...所以老习惯不一定是好习惯啊。<br>
这一次的心得体会：还是得好好看题！看清楚题目要求比一切都重要！同时基础要扎实！培养良好的代码风格！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[开始我的博客之路]]></title>
        <id>https://nixil-ee.github.io//post/kai-shi-wo-de-bo-ke-zhi-lu</id>
        <link href="https://nixil-ee.github.io//post/kai-shi-wo-de-bo-ke-zhi-lu">
        </link>
        <updated>2019-09-01T12:13:05.000Z</updated>
        <content type="html"><![CDATA[<p>在今天正式开始我的博客之路<br>
说来惭愧，其实早就知道博客的存在，并从中获取到了非常多的知识以及问题的解决方案，只是一直没有把时间分配出来写博客。但在学习的过程中，越发感觉到编写技术博客的便利之处，例如将书中的笔记整理上传到博客中，方便在手机随时查看，同时可以把相关的文件和完成的项目上传到github，与博客相辅相成，对学习有很大帮助。在与参加实习和秋招的师兄师姐的交流中得到很多令人醍醐灌顶的指点，其中之一便是一个技术博客对一位普通大学学生转化成合格的程序员的重要性，决定从今天起，也就是研二的第一天起坚持更新博客。</p>
<p>初步的构想是为来年的实习打好坚实的基础，目标岗位是C++后台开发与机器学习算法岗。首先开始复习C++与算法数据结构，将C++ primer的笔记重新整理一遍，并将相应的课后题重新做一遍巩固基础知识点。开始LeetCode刷题，将重难点与感想更新到博客上。</p>
<p>千里之行始于足下，但更重要的是看清自己的目标、自己的能力以及自己走过的路。这几天放慢学习的脚步，细细看了很多秋招面经，也与很多师兄师姐谈心，感叹自己之前还是不够拼搏，没有将许多宝贵的时间进行充分的利用，但种下一棵树最好的时间一个是十年前，一个便是现在，虽未必能在一年后的秋招中获得最理想的结果，但我相信踏实走过的路，总会回报以相应的美景。<br>
-2019.09.01</p>
]]></content>
    </entry>
</feed>